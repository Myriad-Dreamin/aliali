package ali_drive

//auto generated by go:generate, DO NOT EDIT

func (y *Ali) AcquireToken(reqBody *ApiAcquireTokenRequest) *ApiAcquireTokenResponse {
	url := "https://auth.aliyundrive.com/v2/account/token"
	req := y.r(y.client).
		SetBody(*reqBody)

	var resp = new(ApiAcquireTokenResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileCreateWithFolders(reqBody *ApiFileCreateWithFoldersRequest) *ApiFileCreateWithFoldersResponse {
	url := "https://api.aliyundrive.com/adrive/v2/file/createWithFolders"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileCreateWithFoldersResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileCreateWithProof(reqBody *ApiFileCreateWithProofRequest) *ApiFileCreateWithProofResponse {
	url := "https://api.aliyundrive.com/v2/file/create_with_proof"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileCreateWithProofResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileDeleteById(reqBody *ApiFileDeleteByIdRequest) *ApiFileDeleteByIdResponse {
	url := "https://api.aliyundrive.com/v2/recyclebin/trash"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileDeleteByIdResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileGetById(reqBody *ApiFileGetByIdRequest) *ApiFileGetByIdResponse {
	url := "https://api.aliyundrive.com/v2/file/get"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileGetByIdResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileGetList(reqBody *ApiFileGetListRequest) *ApiFileGetListResponse {
	url := "https://api.aliyundrive.com/adrive/v3/file/list"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileGetListResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileGetPathById(reqBody *ApiFileGetPathByIdRequest) *ApiFileGetPathByIdResponse {
	url := "https://api.aliyundrive.com/adrive/v1/file/get_path"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileGetPathByIdResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileSearch(reqBody *ApiFileSearchRequest) *ApiFileSearchResponse {
	url := "https://api.aliyundrive.com/adrive/v3/file/search"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileSearchResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}

func (y *Ali) FileUploadComplete(reqBody *ApiFileUploadCompleteRequest) *ApiFileUploadCompleteResponse {
	url := "https://api.aliyundrive.com/v2/file/complete"
	req := y.r(y.client).
		SetBody(*reqBody)
	y.setAuthHeader(req)

	var resp = new(ApiFileUploadCompleteResponse)
	if !y.unmarshal(y.processResp(req.Post(url)), &resp) {
		return nil
	}
	return resp
}
